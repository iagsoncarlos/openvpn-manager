name: Simple Release

on:
  pull_request:
    branches: [main]
    types: [closed]

permissions:
  contents: write

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential debhelper dh-python python3-all \
          python3-setuptools python3-dev dpkg-dev devscripts fakeroot
        python -m pip install --upgrade pip setuptools wheel build

    - name: Increment version
      run: |
        CURRENT=$(cat VERSION)
        IFS='.' read -ra V <<< "$CURRENT"
        NEW="${V[0]}.${V[1]}.$((${V[2]} + 1))"
        echo $NEW > VERSION
        echo "NEW_VERSION=$NEW" >> $GITHUB_ENV
        echo "Version: $CURRENT -> $NEW"

    - name: Update files
      run: |
        # Create new changelog entry
        CURRENT_DATE=$(date -R)
        
        # Backup current changelog
        cp debian/changelog debian/changelog.bak
        
        # Create new changelog with proper format
        {
          echo "openvpn-manager ($NEW_VERSION-1) unstable; urgency=medium"
          echo ""
          echo "  * Version $NEW_VERSION"
          echo "  * Auto-generated release"
          echo ""
          echo " -- IÃ¡gson Carlos Lima Silva <iagsoncarlos@gmail.com>  $CURRENT_DATE"
          echo ""
          # Append old changelog (skip first entry)
          tail -n +9 debian/changelog.bak
        } > debian/changelog
        
        rm debian/changelog.bak

    - name: Build package
      run: |
        chmod +x ./build.sh
        ./build.sh
        ./build.sh

    - name: Commit and tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add VERSION debian/changelog
        git commit -m "Release v$NEW_VERSION"
        git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
        git push origin main
        git push origin "v$NEW_VERSION"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.NEW_VERSION }}
        name: Release v${{ env.NEW_VERSION }}
        body: |
          ## Release v${{ env.NEW_VERSION }}
          
          Auto-generated release from merged PR.
          
          ### Installation
          ```bash
          sudo dpkg -i openvpn-manager_${{ env.NEW_VERSION }}-1_all.deb
          ```
        files: |
          dist/*.deb
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}